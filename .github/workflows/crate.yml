name: crate

on:
  release:
    types: [published]

jobs:
  build:
    name: Build and publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        run: |
          rustup update nightly
          rustup default nightly
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu

      - name: Build
        run: |
          RUSTFLAGS="-Clinker=clang -Clink-arg=-fuse-ld=lld -Zsanitizer=address" cargo build -Zbuild-std -Zbuild-std-features --target x86_64-unknown-linux-gnu --verbose
          RUSTFLAGS="-Clinker=clang -Clink-arg=-fuse-ld=lld -Zsanitizer=address" cargo test -Zbuild-std -Zbuild-std-features --target x86_64-unknown-linux-gnu --verbose
          cat ./resources/done_abilist.txt ./resources/libc_ubuntu1404_abilist.txt ./resources/rust_abilist.txt > ./resources/abilist.txt
          RUSTFLAGS="-Clinker=clang -Clink-arg=-fuse-ld=lld -Zsanitizer=dataflow -Zsanitizer-dataflow-abilist=${PWD}/resources/abilist.txt" cargo build -Zbuild-std -Zbuild-std-features --target x86_64-unknown-linux-gnu --verbose
          RUSTFLAGS="-Clinker=clang -Clink-arg=-fuse-ld=lld -Zsanitizer=dataflow -Zsanitizer-dataflow-abilist=${PWD}/resources/abilist.txt" cargo test -Zbuild-std -Zbuild-std-features --target x86_64-unknown-linux-gnu --verbose
          rm ./resources/abilist.txt

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: "${{secrets.CARGO_REGISTRY_TOKEN}}"
        run: cargo publish --verbose
